buildscript {
    repositories {
        maven { url = 'https://files.minecraftforge.net/maven' }
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:3.+'
    }
}
        
apply plugin: 'net.minecraftforge.gradle'
// Only edit below this line, the above code adds and enables the necessary things for Forge to be setup.
apply plugin: 'eclipse'
apply plugin: 'maven-publish'

version = "mc${mc_version}-f${forge_version}-${mod_version_type}${mod_version}"
group = "${package_group}" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "${mod_name}"

sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.8' // Need this here so eclipse task generates correctly.

minecraft {
    mappings channel: 'snapshot', version: '20171003-1.12'
    runs {
        client {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'
        }

        server {
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'
        }
    }
}

repositories {
    // Put repositories for dependencies here
    // ForgeGradle automatically adds the Forge maven and Maven Central for you

	// if using maven, DO NOT have the jar in the flatDir dir.
    maven {
        url "${project.projectDir}/../maven"
    }
    maven {
        name = "CurseMaven"
        url = "https://www.cursemaven.com"
    }
            
    // If you have mod jar dependencies in ./libs, you can declare them as a repository like so:
     //flatDir {
      //   dir 'libs'
    // }
}

dependencies {
    minecraft 'net.minecraftforge:forge:1.12.2-14.23.5.2859'
    compileOnly fg.deobf("someguyssoftware.gottschcore:GottschCore:mc1.12.2-f14.23.5.2859-v1.15.0")
	compileOnly fg.deobf("curse.maven:treasure2-289760:3990800")
}

jar {
    manifest {
        attributes([
            "Specification-Title": "${archivesBaseName}",
            "Specification-Vendor": "gottsch",
            "Specification-Version": "1", // We are version 1 of ourselves
            "Implementation-Title": "${archivesBaseName}-${version}",
            "Implementation-Version": "${version}",
            "Implementation-Vendor" :"gottsch",
            "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

jar.finalizedBy('reobfJar') 

